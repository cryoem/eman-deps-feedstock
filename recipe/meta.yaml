{% set build = 0 %}

package:
    name: eman-deps
    version: '28.0'

build:
    # prioritize gui variant via build number
    {% if ui == 'gui' %}
    {% set build = build + 100 %}
    {% endif %}
    number: {{ build }}
    skip: True  # [win32]
    skip: True  # [py!=37]
    skip: True  # [ui=='nogui']

    # add build string so packages can depend on
    # gui or nogui variants explicitly:
    # `pkg * gui_*` for any gui
    # `pkg * nogui_*` for no gui
    string: "{{ ui }}_h{{ PKG_HASH }}_{{ build }}"

requirements:
    build:
      - {{ compiler('c') }}
      - sysroot_linux-64 2.17               # [linux64]

    host:
        - pyqt           5.*                # [ui == 'gui']
        - pyopengl       3.1.5              # [ui == 'gui']
        - cmake          3.14.*

        - matplotlib
        - scipy
        - ipython
        - scikit-learn
        - pandas
        - tensorflow-gpu 2.*                # [linux]
        - cudatoolkit                       # [linux]
        - cudnn          7                  # [linux]
        - tensorflow     2.*                # [osx or win]
        - bsddb3
        - pydusa         1.15 *_17          # [not win]
        - nose
        - future
        - configparser
        - tqdm
        - jupyterlab

        - python
        - boost          1.69.*                # [win]
        - boost          1.69.* *_0            # [not win]
        - boost-cpp      1.69.* *_0            # [not win]
        - fftw           3.3.8  mpi_openmpi_*  # [not win]
        - fftw           3.3.8  nompi_*        # [win]
        - numpy          1.17
        - ftgl
        - freetype
        - gsl
        - hdf5
        - jpeg
        - libtiff
        - libpng
        - zlib
        - openmpi        3                     # [not win]

    run:
        {% for package in resolved_packages('host') %}
        - {{ package }}
        {% endfor %}

test:
  files:
    - test_imports.py
    - test_imports_future.py
    - test_imports_gui.py                   # [ui == 'gui']
    - test_imports_pydusa.py                # [not win]
  commands:
    - echo "TESTING eman-deps"
    - cmake --version
    - python test_imports.py
    - python test_imports_future.py
    - python test_imports_gui.py            # [ui == 'gui']
    - python test_imports_pydusa.py         # [not win]

about:
  summary: Meta-package for eman2 dependencies
